// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rando.proto

package randopb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRandRequest struct {
	Seed                 int64    `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Max                  int32    `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandRequest) Reset()         { *m = GetRandRequest{} }
func (m *GetRandRequest) String() string { return proto.CompactTextString(m) }
func (*GetRandRequest) ProtoMessage()    {}
func (*GetRandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rando_dc269a77fc8a19ac, []int{0}
}
func (m *GetRandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandRequest.Unmarshal(m, b)
}
func (m *GetRandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandRequest.Marshal(b, m, deterministic)
}
func (dst *GetRandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandRequest.Merge(dst, src)
}
func (m *GetRandRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandRequest.Size(m)
}
func (m *GetRandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandRequest proto.InternalMessageInfo

func (m *GetRandRequest) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

func (m *GetRandRequest) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type GetRandResponse struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandResponse) Reset()         { *m = GetRandResponse{} }
func (m *GetRandResponse) String() string { return proto.CompactTextString(m) }
func (*GetRandResponse) ProtoMessage()    {}
func (*GetRandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rando_dc269a77fc8a19ac, []int{1}
}
func (m *GetRandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandResponse.Unmarshal(m, b)
}
func (m *GetRandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandResponse.Marshal(b, m, deterministic)
}
func (dst *GetRandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandResponse.Merge(dst, src)
}
func (m *GetRandResponse) XXX_Size() int {
	return xxx_messageInfo_GetRandResponse.Size(m)
}
func (m *GetRandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandResponse proto.InternalMessageInfo

func (m *GetRandResponse) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*GetRandRequest)(nil), "randopb.GetRandRequest")
	proto.RegisterType((*GetRandResponse)(nil), "randopb.GetRandResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RandoClient is the client API for Rando service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RandoClient interface {
	GetRand(ctx context.Context, in *GetRandRequest, opts ...grpc.CallOption) (*GetRandResponse, error)
}

type randoClient struct {
	cc *grpc.ClientConn
}

func NewRandoClient(cc *grpc.ClientConn) RandoClient {
	return &randoClient{cc}
}

func (c *randoClient) GetRand(ctx context.Context, in *GetRandRequest, opts ...grpc.CallOption) (*GetRandResponse, error) {
	out := new(GetRandResponse)
	err := c.cc.Invoke(ctx, "/randopb.Rando/GetRand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RandoServer is the server API for Rando service.
type RandoServer interface {
	GetRand(context.Context, *GetRandRequest) (*GetRandResponse, error)
}

func RegisterRandoServer(s *grpc.Server, srv RandoServer) {
	s.RegisterService(&_Rando_serviceDesc, srv)
}

func _Rando_GetRand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandoServer).GetRand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/randopb.Rando/GetRand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandoServer).GetRand(ctx, req.(*GetRandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rando_serviceDesc = grpc.ServiceDesc{
	ServiceName: "randopb.Rando",
	HandlerType: (*RandoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRand",
			Handler:    _Rando_GetRand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rando.proto",
}

func init() { proto.RegisterFile("rando.proto", fileDescriptor_rando_dc269a77fc8a19ac) }

var fileDescriptor_rando_dc269a77fc8a19ac = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x4a, 0xcc, 0x4b,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x07, 0x73, 0x0a, 0x92, 0x94, 0xcc, 0xb8,
	0xf8, 0xdc, 0x53, 0x4b, 0x82, 0x12, 0xf3, 0x52, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84,
	0x84, 0xb8, 0x58, 0x8a, 0x53, 0x53, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0xc0, 0x6c,
	0x21, 0x01, 0x2e, 0xe6, 0xdc, 0xc4, 0x0a, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x10, 0x53,
	0x49, 0x9d, 0x8b, 0x1f, 0xae, 0xaf, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x84, 0x8b, 0xb5,
	0x2c, 0x31, 0xa7, 0x34, 0x15, 0xac, 0x93, 0x35, 0x08, 0xc2, 0x31, 0x72, 0xe7, 0x62, 0x05, 0xa9,
	0xca, 0x17, 0xb2, 0xe3, 0x62, 0x87, 0xea, 0x10, 0x12, 0xd7, 0x83, 0x5a, 0xaf, 0x87, 0x6a, 0xb7,
	0x94, 0x04, 0xa6, 0x04, 0xc4, 0x70, 0x25, 0x86, 0x24, 0x36, 0xb0, 0xcb, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x19, 0x06, 0xb0, 0xfe, 0xc8, 0x00, 0x00, 0x00,
}
